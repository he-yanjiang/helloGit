2020-11-07 01:34:33.905 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 01:34:33.935 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 2060 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 01:34:33.938 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 01:34:35.288 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 01:34:35.288 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 01:34:35.368 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 Redis repository interfaces.
2020-11-07 01:34:36.542 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 01:34:36.559 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 01:34:36.560 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 01:34:36.561 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 01:34:36.711 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 01:34:36.712 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2594 ms
2020-11-07 01:34:38.566 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 01:34:38.707 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 01:34:39.297 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 01:34:39.341 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 01:34:39.363 [main] INFO  com.sst.App - Started App in 6.12 seconds (JVM running for 10.752)
2020-11-07 01:34:39.522 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 01:34:39.522 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 01:34:39.538 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-11-07 01:34:39.576 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：String com.sst.service.impl.UserServiceImpl.loginByPassword(String,String)。参数为：[15281022297, 4QrcOUm6Wau+VuBX8g+IPg==]
2020-11-07 01:34:39.671 [http-nio-80-exec-1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-07 01:34:40.313 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：27f63bc5-1999-4001-86c6-f7ee5f7c6ca3
2020-11-07 01:34:40.313 [http-nio-80-exec-1] INFO  com.sst.log.Log - String com.sst.service.impl.UserServiceImpl.loginByPassword(String,String)执行完成。 后置
2020-11-07 01:34:50.806 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：String com.sst.service.impl.UserServiceImpl.loginByPassword(String,String)。参数为：[15281022297, 4QrcOUm6Wau+VuBX8g+IPg==]
2020-11-07 01:34:50.813 [http-nio-80-exec-3] INFO  com.sst.log.Log - 返回值：bde772e2-22b7-4440-9b0d-5231e8351d7a
2020-11-07 01:34:50.814 [http-nio-80-exec-3] INFO  com.sst.log.Log - String com.sst.service.impl.UserServiceImpl.loginByPassword(String,String)执行完成。 后置
2020-11-07 01:35:14.607 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 01:35:14.613 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：null
2020-11-07 01:35:14.614 [http-nio-80-exec-4] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 01:35:17.996 [http-nio-80-exec-5] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 01:35:18.005 [http-nio-80-exec-5] INFO  com.sst.log.Log - 异常代码：10002,异常信息：验证码已发送
2020-11-07 01:35:18.010 [http-nio-80-exec-5] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 01:35:27.854 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 01:35:27.856 [http-nio-80-exec-6] INFO  com.sst.log.Log - 异常代码：10002,异常信息：验证码已发送
2020-11-07 01:35:27.861 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 01:36:16.634 [http-nio-80-exec-8] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 01:36:16.641 [http-nio-80-exec-8] INFO  com.sst.log.Log - 异常代码：10002,异常信息：验证码已发送
2020-11-07 01:36:16.643 [http-nio-80-exec-8] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 01:38:05.423 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 01:38:05.443 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 11020 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 01:38:05.443 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 01:38:06.498 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 01:38:06.498 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 01:38:06.528 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2020-11-07 01:38:07.278 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 01:38:07.288 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 01:38:07.288 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 01:38:07.288 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 01:38:07.398 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 01:38:07.398 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1840 ms
2020-11-07 01:38:08.558 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 01:38:08.638 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 01:38:09.008 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 01:38:09.038 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 01:38:09.053 [main] INFO  com.sst.App - Started App in 4.2 seconds (JVM running for 6.522)
2020-11-07 01:38:27.489 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 01:38:27.490 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 01:38:27.503 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-07 01:59:06.494 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 01:59:06.591 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 8224 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 01:59:06.594 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 01:59:07.858 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 01:59:07.861 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 01:59:07.905 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-11-07 01:59:08.774 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 01:59:08.787 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 01:59:08.789 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 01:59:08.790 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 01:59:08.923 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 01:59:08.923 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2175 ms
2020-11-07 01:59:10.635 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 01:59:10.752 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 01:59:11.135 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 01:59:11.187 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 01:59:11.199 [main] INFO  com.sst.App - Started App in 5.342 seconds (JVM running for 7.717)
2020-11-07 01:59:36.477 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 01:59:36.478 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 01:59:36.487 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2020-11-07 02:48:05.150 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 02:48:05.157 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 6212 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 02:48:05.159 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 02:48:06.180 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 02:48:06.183 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 02:48:06.224 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020-11-07 02:48:06.564 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
2020-11-07 02:48:06.576 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-07 02:48:06.588 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:241)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:723)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:536)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.sst.App.main(App.java:21)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 15 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 36 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:128)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:97)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:78)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:430)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	... 58 common frames omitted
2020-11-07 02:50:30.978 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 02:50:31.003 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 11728 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 02:50:31.006 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 02:50:31.995 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 02:50:31.998 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 02:50:32.037 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2020-11-07 02:50:32.390 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
2020-11-07 02:50:32.399 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-07 02:50:32.408 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:241)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:723)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:536)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.sst.App.main(App.java:21)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cache.annotation.ProxyCachingConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 15 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 36 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: com.sst.controller.BaeaController [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:128)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:97)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:78)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:430)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	... 58 common frames omitted
2020-11-07 02:51:26.834 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 4168 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 02:51:26.829 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 02:51:26.837 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 02:51:27.886 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 02:51:27.888 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 02:51:27.952 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-11-07 02:51:28.716 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 02:51:28.730 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 02:51:28.731 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 02:51:28.731 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 02:51:28.821 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 02:51:28.821 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1906 ms
2020-11-07 02:51:30.359 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 02:51:30.513 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 02:51:30.948 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 02:51:30.988 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 02:51:30.998 [main] INFO  com.sst.App - Started App in 4.729 seconds (JVM running for 7.028)
2020-11-07 02:51:50.484 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 02:51:50.484 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 02:51:50.492 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2020-11-07 02:51:50.523 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 02:51:50.831 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：null
2020-11-07 02:51:50.831 [http-nio-80-exec-1] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 02:52:08.666 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 02:52:08.695 [http-nio-80-exec-2] INFO  com.sst.log.Log - 异常代码：10002,异常信息：验证码已发送
2020-11-07 02:52:08.700 [http-nio-80-exec-2] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 02:54:47.150 [http-nio-80-exec-5] INFO  com.sst.log.Log - [org.apache.catalina.connector.RequestFacade@10d8ef5a, java.lang.NullPointerException]
2020-11-07 02:57:35.664 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 02:57:35.690 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 5484 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 02:57:35.699 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 02:57:36.805 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 02:57:36.808 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 02:57:36.851 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-11-07 02:57:37.652 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 02:57:37.661 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 02:57:37.662 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 02:57:37.662 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 02:57:37.757 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 02:57:37.757 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1936 ms
2020-11-07 02:57:39.090 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 02:57:39.202 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 02:57:39.720 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 02:57:39.770 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 02:57:39.786 [main] INFO  com.sst.App - Started App in 4.682 seconds (JVM running for 6.991)
2020-11-07 02:57:52.347 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 02:57:52.348 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 02:57:52.361 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-07 02:57:52.379 [http-nio-80-exec-1] INFO  com.sst.log.Log - []
2020-11-07 02:57:52.389 [http-nio-80-exec-1] INFO  com.sst.log.Log - [org.apache.catalina.connector.RequestFacade@4c589019, java.lang.NullPointerException]
2020-11-07 02:59:09.194 [http-nio-80-exec-4] INFO  com.sst.log.Log - []
2020-11-07 02:59:09.196 [http-nio-80-exec-4] INFO  com.sst.log.Log - [org.apache.catalina.connector.RequestFacade@4c589019, java.lang.NullPointerException]
2020-11-07 02:59:26.984 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 02:59:27.004 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 8532 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 02:59:27.006 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 02:59:28.002 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 02:59:28.004 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 02:59:28.042 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-11-07 02:59:28.857 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 02:59:28.869 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 02:59:28.870 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 02:59:28.870 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 02:59:28.994 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 02:59:28.994 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1896 ms
2020-11-07 02:59:30.294 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 02:59:30.401 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 02:59:30.859 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 02:59:30.909 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 02:59:30.921 [main] INFO  com.sst.App - Started App in 4.475 seconds (JVM running for 6.681)
2020-11-07 02:59:42.419 [http-nio-80-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 02:59:42.420 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 02:59:42.431 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2020-11-07 02:59:42.460 [http-nio-80-exec-2] INFO  com.sst.log.Log - String com.sst.controller.TestController.test9(),[]
2020-11-07 02:59:42.471 [http-nio-80-exec-2] INFO  com.sst.log.Log - Object com.sst.controller.BaesController.handlerException(HttpServletRequest,Exception),[org.apache.catalina.connector.RequestFacade@1bb8122a, java.lang.NullPointerException]
2020-11-07 03:02:35.324 [http-nio-80-exec-3] INFO  com.sst.log.Log - String com.sst.controller.TestController.test8(),[]
2020-11-07 03:02:35.325 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 03:02:35.641 [http-nio-80-exec-3] INFO  com.sst.log.Log - 返回值：null
2020-11-07 03:02:35.641 [http-nio-80-exec-3] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 03:02:39.877 [http-nio-80-exec-6] INFO  com.sst.log.Log - String com.sst.controller.TestController.test8(),[]
2020-11-07 03:02:39.878 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-07 03:02:39.885 [http-nio-80-exec-6] INFO  com.sst.log.Log - 异常代码：10002,异常信息：验证码已发送
2020-11-07 03:02:39.891 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.service.impl.UserServiceImpl.getOtp(String)执行完成。 后置
2020-11-07 20:06:30.960 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 20:06:30.985 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 1496 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 20:06:30.988 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 20:06:32.226 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 20:06:32.230 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 20:06:32.274 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces.
2020-11-07 20:06:33.298 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 20:06:33.309 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 20:06:33.310 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 20:06:33.310 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 20:06:33.475 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 20:06:33.475 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2351 ms
2020-11-07 20:06:34.916 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 20:06:35.016 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 20:06:35.459 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 20:06:35.484 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 20:06:35.497 [main] INFO  com.sst.App - Started App in 5.488 seconds (JVM running for 7.753)
2020-11-07 20:07:49.385 [http-nio-80-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 20:07:49.386 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 20:07:49.407 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-11-07 20:07:49.637 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:07:49.637 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getContent(),[]
2020-11-07 20:07:50.040 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:07:50.040 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-07 20:07:50.108 [http-nio-80-exec-3] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-07 20:07:50.307 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@70b91514, com.sst.service.model.GoodsCategoryModel@3a4778d9, com.sst.service.model.GoodsCategoryModel@21599b91]
2020-11-07 20:07:50.307 [http-nio-80-exec-4] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:07:50.321 [http-nio-80-exec-3] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.ContentModel@46e9ca30, com.sst.service.model.ContentModel@40fcc08f, com.sst.service.model.ContentModel@7dbe8b5a]
2020-11-07 20:07:50.322 [http-nio-80-exec-3] INFO  com.sst.log.Log - List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()执行完成。 后置
2020-11-07 20:07:52.297 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:07:52.446 [http-nio-80-exec-7] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@1a454aab]
2020-11-07 20:07:52.449 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsListByOne(Integer),[1]
2020-11-07 20:07:52.450 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)。参数为：[1]
2020-11-07 20:07:52.482 [http-nio-80-exec-7] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsModel@3c22e015, com.sst.service.model.GoodsModel@2b3737a5]
2020-11-07 20:07:52.483 [http-nio-80-exec-7] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)执行完成。 后置
2020-11-07 20:07:53.308 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:07:53.452 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@2fa1358a]
2020-11-07 20:07:53.453 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:07:53.453 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:07:53.568 [http-nio-80-exec-10] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@4c51b4e5
2020-11-07 20:07:53.569 [http-nio-80-exec-10] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:10:43.763 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:10:43.765 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:10:43.783 [http-nio-80-exec-2] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@7bfe3776, com.sst.service.model.GoodsCategoryModel@68d4210a, com.sst.service.model.GoodsCategoryModel@7464985a]
2020-11-07 20:10:43.783 [http-nio-80-exec-2] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:10:43.802 [http-nio-80-exec-1] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@6e8e5116]
2020-11-07 20:10:43.802 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:10:43.802 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:10:43.819 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@3c2fc834
2020-11-07 20:10:43.819 [http-nio-80-exec-1] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:10:55.307 [http-nio-80-exec-4] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@5344ec79]
2020-11-07 20:10:55.307 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:10:55.307 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:10:55.308 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:10:55.330 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@4b252aac
2020-11-07 20:10:55.331 [http-nio-80-exec-4] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:14:10.820 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@50e225f6]
2020-11-07 20:14:10.821 [http-nio-80-exec-6] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:14:10.821 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:14:10.821 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:14:10.826 [http-nio-80-exec-5] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:14:10.850 [http-nio-80-exec-5] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@5959b3b2, com.sst.service.model.GoodsCategoryModel@409fc7e7, com.sst.service.model.GoodsCategoryModel@228d50a5]
2020-11-07 20:14:10.850 [http-nio-80-exec-5] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:14:10.859 [http-nio-80-exec-6] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@4dff4c30
2020-11-07 20:14:10.860 [http-nio-80-exec-6] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:14:12.408 [http-nio-80-exec-7] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@132e0f32]
2020-11-07 20:14:12.409 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:14:12.409 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:14:12.415 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:14:12.431 [http-nio-80-exec-7] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@48a19905
2020-11-07 20:14:12.431 [http-nio-80-exec-7] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:14:26.060 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:14:26.086 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@1b7aa0bf]
2020-11-07 20:14:26.086 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:14:26.086 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:14:26.110 [http-nio-80-exec-10] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@18557071
2020-11-07 20:14:26.110 [http-nio-80-exec-10] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:23:09.266 [http-nio-80-exec-2] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@31f39840]
2020-11-07 20:23:09.266 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:23:09.267 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:23:09.267 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:23:09.272 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:23:09.285 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@b4efc29, com.sst.service.model.GoodsCategoryModel@5b80782d, com.sst.service.model.GoodsCategoryModel@4d12a4bc]
2020-11-07 20:23:09.286 [http-nio-80-exec-1] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:23:09.286 [http-nio-80-exec-2] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@62163872
2020-11-07 20:23:09.286 [http-nio-80-exec-2] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:47:52.155 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:47:52.157 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:47:52.168 [http-nio-80-exec-3] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@55ee8d8b, com.sst.service.model.GoodsCategoryModel@29b50516, com.sst.service.model.GoodsCategoryModel@620e012d]
2020-11-07 20:47:52.168 [http-nio-80-exec-3] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:47:52.591 [http-nio-80-exec-4] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@16f9def6]
2020-11-07 20:47:52.592 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:47:52.592 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:47:52.610 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@1ba4de8d
2020-11-07 20:47:52.610 [http-nio-80-exec-4] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:49:45.232 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:49:45.237 [http-nio-80-exec-5] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:49:45.239 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@3fc42898]
2020-11-07 20:49:45.240 [http-nio-80-exec-6] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:49:45.241 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:49:45.256 [http-nio-80-exec-5] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@be44027, com.sst.service.model.GoodsCategoryModel@5542e1eb, com.sst.service.model.GoodsCategoryModel@5d7d173a]
2020-11-07 20:49:45.256 [http-nio-80-exec-5] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:49:45.272 [http-nio-80-exec-6] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@28dbd004
2020-11-07 20:49:45.272 [http-nio-80-exec-6] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:56:16.567 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:56:16.569 [http-nio-80-exec-8] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:56:16.581 [http-nio-80-exec-8] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@510e63a0, com.sst.service.model.GoodsCategoryModel@62f00907, com.sst.service.model.GoodsCategoryModel@31a3c65f]
2020-11-07 20:56:16.582 [http-nio-80-exec-8] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:56:16.585 [http-nio-80-exec-7] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@216127fc]
2020-11-07 20:56:16.585 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:56:16.586 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:56:16.601 [http-nio-80-exec-7] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@6e9e780d
2020-11-07 20:56:16.601 [http-nio-80-exec-7] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:57:38.089 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:57:38.091 [http-nio-80-exec-9] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 20:57:38.093 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@5431ef28]
2020-11-07 20:57:38.094 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:57:38.094 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:57:38.101 [http-nio-80-exec-9] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@4fae891, com.sst.service.model.GoodsCategoryModel@4f5ea05e, com.sst.service.model.GoodsCategoryModel@6d330938]
2020-11-07 20:57:38.102 [http-nio-80-exec-9] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 20:57:38.111 [http-nio-80-exec-10] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@10054c6c
2020-11-07 20:57:38.112 [http-nio-80-exec-10] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:58:26.030 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:58:26.030 [http-nio-80-exec-1] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@30cbf789]
2020-11-07 20:58:26.030 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:58:26.030 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:58:26.045 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@21705be5
2020-11-07 20:58:26.045 [http-nio-80-exec-1] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 20:58:29.898 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 20:58:29.901 [http-nio-80-exec-4] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@579b9b56]
2020-11-07 20:58:29.902 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 20:58:29.902 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 20:58:29.913 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@1a1fc28b
2020-11-07 20:58:29.914 [http-nio-80-exec-4] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:23:05.970 [http-nio-80-exec-8] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@27f10d12]
2020-11-07 21:23:05.970 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:23:05.970 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:23:05.971 [http-nio-80-exec-8] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:23:05.973 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 21:23:05.983 [http-nio-80-exec-7] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@2032ef1, com.sst.service.model.GoodsCategoryModel@2072eb98, com.sst.service.model.GoodsCategoryModel@2477ff9f]
2020-11-07 21:23:05.984 [http-nio-80-exec-7] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 21:23:06.000 [http-nio-80-exec-8] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@4e83efec
2020-11-07 21:23:06.000 [http-nio-80-exec-8] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:39:58.442 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:39:58.444 [http-nio-80-exec-9] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 21:39:58.458 [http-nio-80-exec-9] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@3d8e46a8, com.sst.service.model.GoodsCategoryModel@53a6b5aa, com.sst.service.model.GoodsCategoryModel@9497c55]
2020-11-07 21:39:58.458 [http-nio-80-exec-9] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 21:39:58.478 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@2306d55c]
2020-11-07 21:39:58.479 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:39:58.479 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:39:58.495 [http-nio-80-exec-10] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@44108dcb
2020-11-07 21:39:58.496 [http-nio-80-exec-10] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:54:47.510 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 13724 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 21:54:47.517 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 21:54:47.515 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 21:54:49.131 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 21:54:49.133 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 21:54:49.173 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-11-07 21:54:50.281 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 21:54:50.295 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 21:54:50.295 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 21:54:50.295 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 21:54:50.462 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 21:54:50.462 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2805 ms
2020-11-07 21:54:52.076 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 21:54:52.215 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 21:54:52.758 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 21:54:52.794 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 21:54:52.810 [main] INFO  com.sst.App - Started App in 6.376 seconds (JVM running for 10.086)
2020-11-07 21:55:45.590 [http-nio-80-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 21:55:45.591 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 21:55:45.604 [http-nio-80-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-07 21:55:45.796 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getContent(),[]
2020-11-07 21:55:45.796 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:55:46.122 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-07 21:55:46.122 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 21:55:46.183 [http-nio-80-exec-3] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-07 21:55:46.336 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.ContentModel@1ace77ae, com.sst.service.model.ContentModel@1ef9b726, com.sst.service.model.ContentModel@63ce7f83]
2020-11-07 21:55:46.336 [http-nio-80-exec-3] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@200b02a3, com.sst.service.model.GoodsCategoryModel@3fce77c9, com.sst.service.model.GoodsCategoryModel@4fe121ee]
2020-11-07 21:55:46.336 [http-nio-80-exec-3] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 21:55:46.337 [http-nio-80-exec-4] INFO  com.sst.log.Log - List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()执行完成。 后置
2020-11-07 21:55:47.155 [http-nio-80-exec-6] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:55:47.296 [http-nio-80-exec-7] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@4f14a4ee]
2020-11-07 21:55:47.299 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsListByOne(Integer),[1]
2020-11-07 21:55:47.299 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)。参数为：[1]
2020-11-07 21:55:47.318 [http-nio-80-exec-7] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsModel@634b54a2, com.sst.service.model.GoodsModel@72d542a9]
2020-11-07 21:55:47.318 [http-nio-80-exec-7] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)执行完成。 后置
2020-11-07 21:55:48.515 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:55:48.666 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@809ad46]
2020-11-07 21:55:48.668 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[2]
2020-11-07 21:55:48.668 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[2]
2020-11-07 21:55:48.689 [http-nio-80-exec-10] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:55:56.977 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:55:59.662 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:04.928 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:11.881 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getContent(),[]
2020-11-07 21:56:11.882 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:13.275 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:13.279 [http-nio-80-exec-10] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@6659799c]
2020-11-07 21:56:13.281 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsListByOne(Integer),[1]
2020-11-07 21:56:13.283 [http-nio-80-exec-10] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)。参数为：[1]
2020-11-07 21:56:13.287 [http-nio-80-exec-10] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsModel@5fa0fdb4, com.sst.service.model.GoodsModel@62f814f3]
2020-11-07 21:56:13.288 [http-nio-80-exec-10] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)执行完成。 后置
2020-11-07 21:56:14.509 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:14.634 [http-nio-80-exec-3] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@116ee621]
2020-11-07 21:56:14.634 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:56:14.635 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:56:14.644 [http-nio-80-exec-3] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:56:43.036 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:43.050 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@187dfe3d]
2020-11-07 21:56:43.050 [http-nio-80-exec-6] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:56:43.051 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:56:43.059 [http-nio-80-exec-6] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:56:44.902 [http-nio-80-exec-5] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@3ffecb85]
2020-11-07 21:56:44.903 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:56:44.904 [http-nio-80-exec-5] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:56:44.905 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:56:44.918 [http-nio-80-exec-5] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:57:14.745 [http-nio-80-exec-9] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:57:14.745 [http-nio-80-exec-7] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@43e52ca]
2020-11-07 21:57:14.746 [http-nio-80-exec-7] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:57:14.747 [http-nio-80-exec-7] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:57:14.748 [http-nio-80-exec-9] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 21:57:14.758 [http-nio-80-exec-7] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:57:14.768 [http-nio-80-exec-9] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@46564fb4, com.sst.service.model.GoodsCategoryModel@6752167c, com.sst.service.model.GoodsCategoryModel@3cb77cca]
2020-11-07 21:57:14.768 [http-nio-80-exec-9] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 21:57:29.620 [http-nio-80-exec-10] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:57:29.667 [http-nio-80-exec-1] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@56998755]
2020-11-07 21:57:29.668 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:57:29.668 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:57:29.676 [http-nio-80-exec-1] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:58:21.115 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 21:58:21.115 [http-nio-80-exec-3] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@3b19a419]
2020-11-07 21:58:21.115 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 21:58:21.116 [http-nio-80-exec-3] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 21:58:21.116 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 21:58:21.121 [http-nio-80-exec-3] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 21:58:21.130 [http-nio-80-exec-2] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@7b761b60, com.sst.service.model.GoodsCategoryModel@4fe205ea, com.sst.service.model.GoodsCategoryModel@18b4703d]
2020-11-07 21:58:21.130 [http-nio-80-exec-2] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 22:00:54.595 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 22:00:54.597 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 22:00:54.604 [http-nio-80-exec-6] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@2480a69b]
2020-11-07 22:00:54.607 [http-nio-80-exec-6] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 22:00:54.608 [http-nio-80-exec-6] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 22:00:54.615 [http-nio-80-exec-4] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@76f2f6c0, com.sst.service.model.GoodsCategoryModel@6d3b9670, com.sst.service.model.GoodsCategoryModel@3e884f20]
2020-11-07 22:00:54.616 [http-nio-80-exec-4] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 22:00:54.630 [http-nio-80-exec-6] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 22:01:26.739 [http-nio-80-exec-8] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 22:01:26.751 [http-nio-80-exec-5] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@413faad8]
2020-11-07 22:01:26.752 [http-nio-80-exec-5] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 22:01:26.752 [http-nio-80-exec-5] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 22:01:26.758 [http-nio-80-exec-5] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 22:01:57.084 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 22:01:57.160 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 8068 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 22:01:57.164 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 22:01:58.617 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 22:01:58.619 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 22:01:58.665 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2020-11-07 22:01:59.537 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 22:01:59.548 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 22:01:59.549 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 22:01:59.550 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 22:01:59.707 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 22:01:59.708 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2347 ms
2020-11-07 22:02:01.257 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 22:02:01.371 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 22:02:01.948 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 22:02:01.979 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 22:02:01.993 [main] INFO  com.sst.App - Started App in 5.725 seconds (JVM running for 8.17)
2020-11-07 22:02:42.709 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 22:02:42.710 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 22:02:42.721 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2020-11-07 22:02:42.766 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 22:02:42.766 [http-nio-80-exec-2] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@dcb608c]
2020-11-07 22:02:42.773 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 22:02:42.774 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 22:02:42.852 [http-nio-80-exec-2] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-07 22:02:43.040 [http-nio-80-exec-2] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 22:02:43.134 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 22:02:43.159 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@16d85d78, com.sst.service.model.GoodsCategoryModel@2764de08, com.sst.service.model.GoodsCategoryModel@2759df58]
2020-11-07 22:02:43.159 [http-nio-80-exec-1] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-07 22:03:01.589 [http-nio-80-exec-3] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 22:03:01.598 [http-nio-80-exec-4] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@3aeadcc]
2020-11-07 22:03:01.600 [http-nio-80-exec-4] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 22:03:01.602 [http-nio-80-exec-4] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 22:03:01.613 [http-nio-80-exec-4] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 22:13:16.296 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-07 22:13:16.347 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 12852 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-07 22:13:16.359 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-07 22:13:17.654 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-07 22:13:17.657 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-07 22:13:17.712 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-11-07 22:13:18.606 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-07 22:13:18.620 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-07 22:13:18.621 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-07 22:13:18.621 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-07 22:13:18.746 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-07 22:13:18.747 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2201 ms
2020-11-07 22:13:20.087 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-07 22:13:20.222 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-07 22:13:20.732 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-07 22:13:20.765 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-07 22:13:20.780 [main] INFO  com.sst.App - Started App in 5.33 seconds (JVM running for 7.405)
2020-11-07 22:13:31.436 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-07 22:13:31.436 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-07 22:13:31.453 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-11-07 22:13:31.497 [http-nio-80-exec-1] INFO  com.sst.log.Log - void com.sst.controller.BaesController.initDate(WebDataBinder),[org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder@79f51746]
2020-11-07 22:13:31.505 [http-nio-80-exec-1] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsDetails(Integer),[1]
2020-11-07 22:13:31.508 [http-nio-80-exec-1] INFO  com.sst.log.Log - 前置增加：执行方法：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-07 22:13:31.626 [http-nio-80-exec-1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-07 22:13:31.706 [http-nio-80-exec-2] INFO  com.sst.log.Log - CommonReturnType com.sst.controller.GoodsController.getGoodsCategoryAll(),[]
2020-11-07 22:13:31.992 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：com.sst.service.model.GoodsModel@2577f667
2020-11-07 22:13:31.993 [http-nio-80-exec-1] INFO  com.sst.log.Log - GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)执行完成。 后置
2020-11-07 22:13:32.280 [http-nio-80-exec-2] INFO  com.sst.log.Log - 前置增加：执行方法：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-07 22:13:32.315 [http-nio-80-exec-2] INFO  com.sst.log.Log - 返回值：[com.sst.service.model.GoodsCategoryModel@6ae04d10, com.sst.service.model.GoodsCategoryModel@3fa7136, com.sst.service.model.GoodsCategoryModel@242c6c31]
2020-11-07 22:13:32.316 [http-nio-80-exec-2] INFO  com.sst.log.Log - List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()执行完成。 后置
2020-11-08 00:41:28.316 [http-nio-80-exec-4] INFO  org.apache.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name [0x160x030x010x00{0x010x000x00w0x030x030xd60x06&1C0x88j0x150x85WDV0x140xe1Z0xbb!0xd2/0x7f0xf30xde_00x940xaa0xa8~0x1fr0xfb0xcc0x000x000x1a0xc0/0xc0+0xc00x110xc00x070xc00x130xc00x090xc00x140xc00x0a0x000x050x00/0x0050xc00x120x000x0a0x010x000x0040x000x050x000x050x010x000x000x000x000x000x0a0x000x080x000x060x000x170x000x180x000x190x000x0b0x000x020x010x000x000x0d0x000x100x000x0e0x040x010x040x030x020x010x020x030x040x010x050x010x060x010xff0x010x000x01...]. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:413)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:261)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
