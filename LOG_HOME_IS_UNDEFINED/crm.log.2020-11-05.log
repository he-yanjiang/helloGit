2020-11-05 22:14:41.262 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-05 22:14:41.302 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 4256 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-05 22:14:41.306 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-05 22:14:42.547 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-05 22:14:42.549 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-05 22:14:42.590 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-11-05 22:14:43.463 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-05 22:14:43.476 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-05 22:14:43.477 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-05 22:14:43.477 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-05 22:14:43.581 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-05 22:14:43.581 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2087 ms
2020-11-05 22:14:45.004 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-05 22:14:45.105 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-05 22:14:45.633 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-05 22:14:45.669 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-05 22:14:45.687 [main] INFO  com.sst.App - Started App in 4.99 seconds (JVM running for 7.743)
2020-11-05 22:14:53.691 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-05 22:14:53.692 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-05 22:14:53.708 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-11-05 22:14:54.081 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@1cde8cf0目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]。返回值为：null
2020-11-05 22:14:54.082 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@1cde8cf0目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 22:14:54.091 [http-nio-80-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause
java.lang.ArithmeticException: / by zero
	at com.sst.controller.TestController.test8(TestController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-11-05 22:17:03.550 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@1cde8cf0类的方法void com.sst.service.impl.UserServiceImpl.getOtp(String)参数[15281022297]抛出异常：com.sst.error.BusinessException
2020-11-05 22:17:03.550 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@1cde8cf0目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 22:17:03.551 [http-nio-80-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.sst.error.BusinessException] with root cause
com.sst.error.BusinessException: null
	at com.sst.service.impl.UserServiceImpl.getOtp(UserServiceImpl.java:156)
	at com.sst.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$52e8afbc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.sst.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$699c5a82.getOtp(<generated>)
	at com.sst.controller.TestController.test8(TestController.java:77)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-11-05 22:36:07.073 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 4656 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-05 22:36:07.078 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-05 22:36:07.082 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-05 22:36:08.275 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-05 22:36:08.277 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-05 22:36:08.319 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-11-05 22:36:09.205 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-05 22:36:09.215 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-05 22:36:09.217 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-05 22:36:09.217 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-05 22:36:09.335 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-05 22:36:09.335 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2138 ms
2020-11-05 22:36:11.003 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-05 22:36:11.117 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-05 22:36:11.724 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-05 22:36:11.759 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-05 22:36:11.772 [main] INFO  com.sst.App - Started App in 5.365 seconds (JVM running for 8.373)
2020-11-05 22:36:28.328 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-05 22:36:28.328 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-05 22:36:28.345 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-11-05 22:36:28.698 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@45e066a2目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]。返回值为：null
2020-11-05 22:36:28.699 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@45e066a2目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 22:36:28.708 [http-nio-80-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause
java.lang.ArithmeticException: / by zero
	at com.sst.controller.TestController.test8(TestController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-11-05 22:36:38.421 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@45e066a2类的方法void com.sst.service.impl.UserServiceImpl.getOtp(String)参数[15281022297]抛出异常：10002验证码已发送
2020-11-05 22:36:38.421 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.UserServiceImpl@45e066a2目标类已执行。方法为：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 22:36:38.422 [http-nio-80-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.sst.error.BusinessException] with root cause
com.sst.error.BusinessException: null
	at com.sst.service.impl.UserServiceImpl.getOtp(UserServiceImpl.java:156)
	at com.sst.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$52e8afbc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.sst.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$1b863119.getOtp(<generated>)
	at com.sst.controller.TestController.test8(TestController.java:77)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-11-05 22:40:49.347 [http-nio-80-exec-4] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-05 22:40:49.546 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@325c593, com.sst.service.model.GoodsCategoryModel@48076814, com.sst.service.model.GoodsCategoryModel@7c38c3ed]
2020-11-05 22:40:49.547 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:40:55.832 [http-nio-80-exec-7] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]。返回值为：[com.sst.service.model.ContentModel@772d4316, com.sst.service.model.ContentModel@467a8394, com.sst.service.model.ContentModel@41925528]
2020-11-05 22:40:55.832 [http-nio-80-exec-7] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-05 22:42:20.333 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@37884dc6, com.sst.service.model.GoodsCategoryModel@9362f4c, com.sst.service.model.GoodsCategoryModel@44181110]
2020-11-05 22:42:20.333 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:42:25.971 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]。返回值为：[com.sst.service.model.ContentModel@3554433e, com.sst.service.model.ContentModel@6c8c5f4f, com.sst.service.model.ContentModel@93ce418]
2020-11-05 22:42:25.971 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-05 22:43:47.836 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@55c5a73b, com.sst.service.model.GoodsCategoryModel@6ec48abc, com.sst.service.model.GoodsCategoryModel@be32cf7]
2020-11-05 22:43:47.836 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:43:52.022 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]。返回值为：[com.sst.service.model.ContentModel@4e715a10, com.sst.service.model.ContentModel@5396aabd, com.sst.service.model.ContentModel@4ffcde2a]
2020-11-05 22:43:52.023 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-05 22:45:34.767 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@7a6a4663, com.sst.service.model.GoodsCategoryModel@e41f54a, com.sst.service.model.GoodsCategoryModel@ebaa8b2]
2020-11-05 22:45:34.767 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:45:39.096 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]。返回值为：[com.sst.service.model.ContentModel@4f2de7e8, com.sst.service.model.ContentModel@53888d6f, com.sst.service.model.ContentModel@2f8935ab]
2020-11-05 22:45:39.097 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.ContentServiceImpl@13af2d11目标类已执行。方法为：List com.sst.service.impl.ContentServiceImpl.getContentAndCategory()。参数为：[]
2020-11-05 22:46:09.817 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)。参数为：[1]。返回值为：[com.sst.service.model.GoodsModel@ec2597, com.sst.service.model.GoodsModel@700e7657]
2020-11-05 22:46:09.818 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：List com.sst.service.impl.GoodsServiceImpl.getGoodsListByOne(Integer)。参数为：[1]
2020-11-05 22:46:11.510 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@3ae5f719
2020-11-05 22:46:11.510 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 22:48:51.484 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@6d04ae82, com.sst.service.model.GoodsCategoryModel@6be18c2a, com.sst.service.model.GoodsCategoryModel@56577cb7]
2020-11-05 22:48:51.485 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:48:51.792 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@4e5764ae
2020-11-05 22:48:51.793 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 22:49:42.033 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@474fb5e7
2020-11-05 22:49:42.033 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 22:53:14.975 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@4b97e2d4, com.sst.service.model.GoodsCategoryModel@25a4072f, com.sst.service.model.GoodsCategoryModel@331a8b38]
2020-11-05 22:53:14.976 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 22:53:14.991 [http-nio-80-exec-7] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@b5386b1
2020-11-05 22:53:14.991 [http-nio-80-exec-7] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:05:37.243 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@6d10aee, com.sst.service.model.GoodsCategoryModel@2ccaae03, com.sst.service.model.GoodsCategoryModel@4caca205]
2020-11-05 23:05:37.243 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:05:37.251 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@dae7871
2020-11-05 23:05:37.252 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:05:40.008 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@5287f9cb
2020-11-05 23:05:40.008 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:08:19.482 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@2837080f, com.sst.service.model.GoodsCategoryModel@45f99d57, com.sst.service.model.GoodsCategoryModel@50138f7e]
2020-11-05 23:08:19.482 [http-nio-80-exec-4] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:08:19.506 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@1ae3b87f
2020-11-05 23:08:19.506 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:10:34.060 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@5e24630a, com.sst.service.model.GoodsCategoryModel@32810602, com.sst.service.model.GoodsCategoryModel@399b4a7e]
2020-11-05 23:10:34.061 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:10:34.074 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@572c04b
2020-11-05 23:10:34.074 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:10:35.756 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@2eac4cde
2020-11-05 23:10:35.756 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:12:15.213 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@5df47d4, com.sst.service.model.GoodsCategoryModel@45fcc459, com.sst.service.model.GoodsCategoryModel@229e784d]
2020-11-05 23:12:15.213 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:12:15.228 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@4f6db16d
2020-11-05 23:12:15.228 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:14:09.262 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@55407e72, com.sst.service.model.GoodsCategoryModel@66ffa1ff, com.sst.service.model.GoodsCategoryModel@69a157f5]
2020-11-05 23:14:09.262 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:14:09.284 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@7ec582ab
2020-11-05 23:14:09.284 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:14:12.617 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@6389f411
2020-11-05 23:14:12.618 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:15:33.250 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@1f6effcf, com.sst.service.model.GoodsCategoryModel@48edbe0d, com.sst.service.model.GoodsCategoryModel@12eaee5f]
2020-11-05 23:15:33.250 [http-nio-80-exec-6] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:15:33.265 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@45291f7c
2020-11-05 23:15:33.265 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:15:39.224 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@7774bc98
2020-11-05 23:15:39.224 [http-nio-80-exec-9] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:19:26.074 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@e847a46, com.sst.service.model.GoodsCategoryModel@5f7446af, com.sst.service.model.GoodsCategoryModel@7687b6d3]
2020-11-05 23:19:26.075 [http-nio-80-exec-2] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:19:26.088 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@206fcd27
2020-11-05 23:19:26.089 [http-nio-80-exec-1] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:25:57.187 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]。返回值为：[com.sst.service.model.GoodsCategoryModel@6b64c9be, com.sst.service.model.GoodsCategoryModel@572feb47, com.sst.service.model.GoodsCategoryModel@2e77484b]
2020-11-05 23:25:57.188 [http-nio-80-exec-3] INFO  com.sst.log.Log - com.sst.service.impl.GoodsCategoryServiceImpl@69cab04e目标类已执行。方法为：List com.sst.service.impl.GoodsCategoryServiceImpl.getGoodsCategoryAll()。参数为：[]
2020-11-05 23:25:57.199 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@76d7c819
2020-11-05 23:25:57.199 [http-nio-80-exec-10] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:25:58.882 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@50af8805
2020-11-05 23:25:58.882 [http-nio-80-exec-5] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:26:12.024 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]。返回值为：com.sst.service.model.GoodsModel@7b0d5bea
2020-11-05 23:26:12.024 [http-nio-80-exec-8] INFO  com.sst.log.Log - com.sst.service.impl.GoodsServiceImpl@7e204b33目标类已执行。方法为：GoodsModel com.sst.service.impl.GoodsServiceImpl.getGoodsDetails(Integer)。参数为：[1]
2020-11-05 23:31:00.815 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.14.Final
2020-11-05 23:31:00.845 [main] INFO  com.sst.App - Starting App on DESKTOP-OFF6OBD with PID 1976 (E:\seckill2\shoppings\target\classes started by Administrator in E:\seckill2\shoppings)
2020-11-05 23:31:00.848 [main] INFO  com.sst.App - No active profile set, falling back to default profiles: default
2020-11-05 23:31:01.999 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-05 23:31:02.002 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-05 23:31:02.050 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2020-11-05 23:31:02.957 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 80 (http)
2020-11-05 23:31:02.969 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-11-05 23:31:02.970 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-05 23:31:02.971 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-05 23:31:03.089 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-05 23:31:03.090 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2096 ms
2020-11-05 23:31:04.647 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-05 23:31:04.783 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-05 23:31:05.475 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-11-05 23:31:05.511 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 80 (http) with context path ''
2020-11-05 23:31:05.525 [main] INFO  com.sst.App - Started App in 5.387 seconds (JVM running for 8.059)
2020-11-05 23:31:12.457 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-05 23:31:12.458 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-05 23:31:12.472 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-11-05 23:31:12.494 [http-nio-80-exec-1] INFO  com.sst.log.Log - 执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 23:31:12.797 [http-nio-80-exec-1] INFO  com.sst.log.Log - 执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
2020-11-05 23:31:12.797 [http-nio-80-exec-1] INFO  com.sst.log.Log - 返回值：null
2020-11-05 23:31:12.797 [http-nio-80-exec-1] INFO  com.sst.log.Log - 执行方法：void com.sst.service.impl.UserServiceImpl.getOtp(String)。参数为：[15281022297]
